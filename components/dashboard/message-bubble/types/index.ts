export interface Message {
  id: string
  content: string
  sender: 'user' | 'ai'
  timestamp: Date
  responseTime?: number
  usedWebSearch?: boolean
  searchResults?: {
    answer: string
    sources: Array<{
      title: string
      url: string
      content: string
      score: number
      published_date?: string | null
    }>
    images?: Array<{
      url: string
      title?: string
      alt?: string
    }>
    query: string
  }
  searchRequest?: string
  searchCompleted?: boolean
  searchError?: boolean
  // Multi-search support (sequential searches)
  multiSearch?: Array<{
    query: string
    completed?: boolean
    error?: boolean
    results?: {
      answer: string
      sources: Array<{
        title: string
        url: string
        content: string
        score: number
        published_date?: string | null
      }>
      images?: Array<{
        url: string
        title?: string
        alt?: string
      }>
      query: string
    }
  }>
  attachedFile?: {
    file: File | null
    preview: string
    type: 'image' | 'document' | 'pdf' | 'excel' | 'csv'
    description?: string
  }
  // Ephemeral images generated by code execution (e.g., matplotlib)
  generatedImages?: Array<{
    src: string
    alt?: string
    width?: number
    height?: number
  }>
  // Image generation state
  imagePrompt?: string
  imageGenerationCompleted?: boolean
  imageGenerationError?: boolean
  // Code execution state for pill UI
  codeExecuting?: boolean
  codeExecuted?: boolean
  isLiked?: boolean
  isDisliked?: boolean
  isPlayingTTS?: boolean
  // Shows inline loader while final answer is synthesized after searches
  isFinalizing?: boolean
  // Agent mode properties
  type?: 'research_analysis' | 'conversational_response' | 'research_planning' | 'task_list' | 'task_start' | 'task_completion' | 'sub_tasks_created' | 'research_insights' | 'summary' | 'research_complete' | 'research_summary' | 'additional_tasks' | 'agent_response' | 'page-content'
  agentState?: any
  tasks?: any[]
  task?: any
  discoveries?: string[]
  confidence?: number
  subTasks?: any[]
  gaps?: string[]
  researchQuality?: 'basic' | 'comprehensive' | 'exhaustive'
  requiresDeepResearch?: boolean
  researchPlan?: string
  pageId?: string // For page creation messages

  executableCode?: {
    code: string
    language: string
  }
}

export interface MessageBubbleProps {
  message: Message
  isLoading?: boolean
  onLikeMessage?: (messageId: string) => void
  onDislikeMessage?: (messageId: string) => void
  onRegenerateMessage?: (messageId: string) => void
  onPageCreated?: (pageId: string, pageTitle: string, pageContent: string) => void

}

export interface MessageContentProps {
  message: Message
  displayContent: string
  isLoading: boolean
  onPageCreated?: (pageId: string, pageTitle: string, pageContent: string) => void
  onImageClick?: (index: number) => void
}

export interface ImagePopupProps {
  isOpen: boolean
  onClose: () => void
  imageSrc: string
  alt: string
}

export interface AgentMessageProps {
  message: Message
}

export interface AttachedFileProps {
  attachedFile: Message['attachedFile']
  isUserMessage: boolean
} 